name: Sonar Example Scan Setup

on:
  workflow_dispatch:

jobs:
  sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Start SonarQube with Docker
        run: |
          docker run -d --name sonarqube -p 9000:9000 -e SONAR_ES_BOOTSTRAP_CHECKS_DISABLE=true sonarqube:10.6-community
          # Wait for SonarQube to be fully up and running
          for i in {1..30}; do
            if curl -s http://localhost:9000 | grep "SonarQube"; then
              echo "SonarQube is ready!";
              break;
            fi
            echo "Waiting for SonarQube to start...";
            sleep 120;
          done

      - name: Create SonarQube Token
        id: generate_token
        run: |
          # Default SonarQube admin credentials
          export SONARQUBE_URL="http://localhost:9000"
          export SONARQUBE_ADMIN="admin"
          export SONARQUBE_PASSWORD="admin"
          
          # Authenticate and create a token using SonarQube API
          TOKEN_NAME="github-actions-token"
          RESPONSE=$(curl  -u admin:admin --data 'name=dummy_token_name&type=GLOBAL_ANALYSIS_TOKEN' -H 'Content-Type: application/x-www-form-urlencoded' http://localhost:9000/api/user_tokens/generate)
          echo "$RESPONSE"
          # Extract the token from the response
          TOKEN=$(echo "$RESPONSE" | jq -r '.token')
          
          if [ "$TOKEN" = "null" ]; then
            echo "Failed to generate SonarQube token!"
            exit 1
          fi
          
          echo "Generated Token: $TOKEN"
          echo "SONAR_TOKEN=$TOKEN" >> $GITHUB_ENV

      - name: Install Sonar Scanner
        run: |
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip
          mv sonar-scanner-4.8.0.2856-linux sonar-scanner

      - name: Run Sonar Scanner and Export SARIF
        env:
          SONAR_HOST_URL: http://localhost:9000
        run: |
          ./sonar-scanner/bin/sonar-scanner \
            -Dsonar.projectKey=${{ github.repository_owner }}_${{ github.repository }} \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.report.export.path=sonar-report.sarif

      - name: Upload SARIF to GitHub Security
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sonar-report.sarif

      - name: Stop and Remove SonarQube Container
        if: always()
        run: |
          docker stop sonarqube
          docker rm sonarqube







